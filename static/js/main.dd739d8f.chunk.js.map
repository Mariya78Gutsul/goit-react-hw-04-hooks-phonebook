{"version":3,"sources":["components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/LocalStorage/LocalStorage.jsx","components/App.jsx","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactList","contacts","onRemoveContact","className","s","list","map","contact","item","name","number","type","onClick","id","Filter","filter","onChangeFilter","value","onChange","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","preventDefault","label","input","button","STORAGE_KEY","startContact","App","setContacts","setFilter","useEffect","key","JSON","parse","localStorage","getItem","error","storage","length","setItem","stringify","cont","toLowerCase","includes","alert","nanoid","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dd739d8f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <li className={s.item} key={contact.id}>\n          <p>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ filter, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={s.list} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","const set = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = (key) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = (key) => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, set, remove };\r\n","import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport * as storage from \"./LocalStorage/LocalStorage\";\n\nconst STORAGE_KEY = \"contacts\";\nconst startContact = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState(startContact);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = storage.get(STORAGE_KEY);\n    if (contacts && contacts.length > 0) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    storage.set(STORAGE_KEY, contacts);\n  }, [contacts]);\n\n  // componentDidMount() {\n  //   const savedContacts = storage.get(STORAGE_KEY);\n  //   if (savedContacts) {\n  //     this.setState({ contacts: savedContacts });\n  //   }\n  // }\n  // componentDidUpdate(prevState) {\n  //   const newContact = this.state.contacts;\n  //   const prevContact = prevState.contacts;\n\n  //   if (newContact?.length !== prevContact?.length)\n  //     storage.save(STORAGE_KEY, newContact);\n  // }\n\n  function addContact(name, number) {\n    const searchSameName = contacts\n      .map((cont) => cont.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (searchSameName) {\n      alert(`${name} is already in contacts`);\n    } else if (name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        name,\n        number,\n        id: nanoid(),\n      };\n      setContacts([...contacts, contact]);\n    }\n  }\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  const removeContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n\n      <Filter filter={filter} onChangeFilter={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onRemoveContact={removeContact}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactForm_list__2hPib\",\"label\":\"ContactForm_label__2Pny9\",\"input\":\"ContactForm_input__2f4_5\",\"button\":\"ContactForm_button__1dhmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1x8Fk\",\"item\":\"ContactList_item___VxVF\",\"TaskList_text\":\"ContactList_TaskList_text__1WsKm\",\"button\":\"ContactList_button__187j1\"};"],"sourceRoot":""}